/*
 * Copyright (c) 2014, Synflow SAS
 * Copyright (c) 2013, Shashank Bangalore Lakshman
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *   * Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *   * Neither the name of Synflow nor the names of its contributors may be
 *     used to endorse or promote products derived from this software without
 *     specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
 * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
package dsp.mac;

import dsp.mac.Mac;

/*
 * This is the test network for the MAC.
 * 
 * @author Shashank Bangalore Lakshman
 * @author Matthieu Wipliez
 */
network MacTest {
	
	source = new task {
		void init() {
			mac.a.write(5); // 5/8 == 0.625
			mac.b.write(6); // 6/8 == 0.75
			// expect 30/64 == 0,46875 ~= 4/8 (3.1% error)

			mac.a.write(1); // 1/8 = 0.125
			mac.b.write(6); // 6/8 = 0.75
			// expect 6/64 == 0,09375 ~= 1/8 (3.1% error)
		}
	};

	mac = new Mac();

	expected = new task {
		void init() {
			print("result = ", mac.result.read());
		}
	};

}
