/*
 * Copyright (c) 2013 Matthieu
 * All rights reserved.
 */

/*
 * MAC - Multiplier and Accumulator
 * A 4-bit signed fraction [s.xxx] MAC unit with rounding
 */

/*
 * Input and output ports
 */
port in i4 a, b, out i4 result;


/*
 * Variable declarations
 */
i4 aIn, aInV, bIn, bInV;
i8 prod;
i4 prodRnd;
i4 sum;


/**
 * Task
 */
void main() {
	aIn = a.read;
	bIn = b.read;
	aInV = (aIn==0b1000) ? 0b1001 : aIn;
	bInV = (bIn==0b1000) ? 0b1001 : bIn;
	prod = (aInV * bInV);
	if(prod[2]){
		prodRnd = (prod>>3) + 1;	//Rounding, truncation and compensation of lower significant bits
	}
	else{
		prodRnd = prod>>3;			//Rounding, truncation
	}
	//fence;
	sum = sum+prodRnd;	// Sum
	
	result.write(sum);
}
